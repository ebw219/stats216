{
  "_args": [
    [
      {
        "raw": "ncbt@~0.0.1",
        "scope": null,
        "escapedName": "ncbt",
        "name": "ncbt",
        "rawSpec": "~0.0.1",
        "spec": ">=0.0.1 <0.1.0",
        "type": "range"
      },
      "/Users/Kelli/Documents/Documents_Kellis MacBook Pro/cse216/cse216_lyle/web/node_modules/authen"
    ]
  ],
  "_from": "ncbt@>=0.0.1 <0.1.0",
  "_id": "ncbt@0.0.1",
  "_inCache": true,
  "_location": "/ncbt",
  "_npmUser": {
    "name": "dimsmol",
    "email": "dimsmol@gmail.com"
  },
  "_npmVersion": "1.3.2",
  "_phantomChildren": {},
  "_requested": {
    "raw": "ncbt@~0.0.1",
    "scope": null,
    "escapedName": "ncbt",
    "name": "ncbt",
    "rawSpec": "~0.0.1",
    "spec": ">=0.0.1 <0.1.0",
    "type": "range"
  },
  "_requiredBy": [
    "/authen"
  ],
  "_resolved": "https://registry.npmjs.org/ncbt/-/ncbt-0.0.1.tgz",
  "_shasum": "f3d945af6d46aad0ff503cb2f22cec194cc6a4bd",
  "_shrinkwrap": null,
  "_spec": "ncbt@~0.0.1",
  "_where": "/Users/Kelli/Documents/Documents_Kellis MacBook Pro/cse216/cse216_lyle/web/node_modules/authen",
  "author": {
    "name": "Dmitry Smolin",
    "email": "dimsmol@gmail.com"
  },
  "bugs": {
    "url": "https://github.com/dimsmol/ncbt/issues"
  },
  "dependencies": {},
  "description": "callback tools",
  "devDependencies": {},
  "directories": {
    "lib": "./lib"
  },
  "dist": {
    "shasum": "f3d945af6d46aad0ff503cb2f22cec194cc6a4bd",
    "tarball": "https://registry.npmjs.org/ncbt/-/ncbt-0.0.1.tgz"
  },
  "engines": {
    "node": ">=0.8.0"
  },
  "homepage": "https://github.com/dimsmol/ncbt#readme",
  "keywords": [
    "callback",
    "tools"
  ],
  "main": "./lib/index",
  "maintainers": [
    {
      "name": "dimsmol",
      "email": "dimsmol@gmail.com"
    }
  ],
  "name": "ncbt",
  "optionalDependencies": {},
  "preferGlobal": false,
  "private": false,
  "readme": "# node.js callback tools\n\nTools for simplifying node.js callback style programming.\n\n## errh(func, cb)\n\nReturns function(err, result) that calls cb(err) if err != null and else calls func(result, cb).\n\nSimplifies this case:\n\n```js\nfunction (cb) {\n\tsomeAsyncCall(function (err, result) {\n\t\tif (err != null) {\n\t\t\tcb(err);\n\t\t}\n\t\telse {\n\t\t\tcb(null, doSomethingWithResult(result));\n\t\t} // too many lines of code\n\t});\n};\n```\n\nto this one:\n\n```js\nvar errh = require('ncbt').errh;\n\nfunction (cb) {\n\tsomeAsyncCall(errh(function (result, cb) {\n\t\tcb(null, doSomethingWithResult(result)); // much nicer\n\t}, cb);\n};\n```\n\n## errh.noResult(cb)\n\nReturns function(err) that calls cb(err) shrinking any other arguments.\n\nUseful for getting rid of insert or update results when querying db.\n\n## errh.nullResult(cb)\n\nLike errh.noResult(cb), but calls cb(err, null).\n\n## License\n\nMIT\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/dimsmol/ncbt.git"
  },
  "version": "0.0.1"
}
